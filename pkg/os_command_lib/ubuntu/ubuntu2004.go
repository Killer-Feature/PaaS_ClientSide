package ubuntu

import (
	"fmt"
	"net/netip"

	cl "github.com/Killer-Feature/PaaS_ClientSide/pkg/os_command_lib"
)

type Ubuntu2004CommandLib struct{}

// Common commands for control-plane and workers

func (u *Ubuntu2004CommandLib) SudoUpdate() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo apt update",
		Parser:    nil,
		Condition: cl.Anyway,
	}
}

func (u *Ubuntu2004CommandLib) SudoFullUpgrade() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo apt -y full-upgrade",
		Parser:    nil,
		Condition: cl.Anyway,
	}
}

func (u *Ubuntu2004CommandLib) AddCRIORepos() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "echo \"deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /\"|sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list\necho \"deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.26/xUbuntu_20.04/ /\"|sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:1.26.list",
		Parser:    nil,
		Condition: cl.Anyway,
	}
}

func (u *Ubuntu2004CommandLib) ImportGPGKey() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:1.26/xUbuntu_20.04/Release.key | sudo apt-key add -; curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/Release.key | sudo apt-key add -",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) InstallCRIO() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo apt install -y cri-o cri-o-runc",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) StartCRIO() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo systemctl enable crio.service\nsudo systemctl start crio.service",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) DisableSWAP() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo swapoff -a",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) InstallUtils() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo apt-get install -y apt-transport-https ca-certificates curl",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) DownloadGoogleCloudSigningKey() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo mkdir -p /etc/apt/keyrings\nsudo touch /etc/apt/keyrings/kubernetes-archive-keyring.gpg\necho \"xsBNBGKItdQBCADWmKTNZEYWgXy73FvKFY5fRro4tGNa4Be4TZW3wZpct9Cj8EjykU7S9EPoJ3EdKpxFltHRu7QbDi6LWSNA4XxwnudQrYGxnxx6Ru1KBHFxHhLfWsvFcGMwit/znpxtIt9UzqCm2YTEW5NUnzQ4rXYqVQK2FLG4weYJ5bKwkY+ZsnRJpzxdHGJ0pBiqwkMT8bfQdJymUBown+SeuQ2HEqfjVMsIRe0dweD2PHWeWo9fTXsz1Q5abiGckyOVyoN9//DgSvLUocUcZsrWvYPaN+o8lXTO3GYFGNVsx069rxarkeCjOpiQOWrQmywXISQudcusSgmmgfsRZYW7FDBy5MQrABEBAAHNUVJhcHR1cmUgQXV0b21hdGljIFNpZ25pbmcgS2V5IChjbG91ZC1yYXB0dXJlLXNpZ25pbmcta2V5LTIwMjItMDMtMDctMDhfMDFfMDEucHViKcLAYgQTAQgAFgUCYoi11AkQtT3IDRPt7wUCGwMCGQEAAMGoCAB8QBNIIN3Q2D3aahrfkb6axd55zOwR0tnriuJRoPHoNuorOpCv9aWMMvQACNWkxsvJxEF8OUbzhSYjAR534RDigjTetjK2i2wKLz/kJjZbuF4ZXMynCm40eVm1XZqU63U9XR2RxmXppyNpMqQO9LrzGEnNJuh23icaZY6no12axymxcle/+SCmda8oDAfa0iyA2iyg/eU05buZv54MC6RB13QtS+8vOrKDGr7RYp/VYvQzYWm+ck6DvlaVX6VB51BkLl23SQknyZIJBVPm8ttU65EyrrgG1jLLHFXDUqJ/RpNKq+PCzWiyt4uy3AfXK89RczLu3uxiD0CQI0T31u/IzsBNBGKItdQBCADIMMJdRcg0Phv7+CrZz3xRE8Fbz8AN+YCLigQeH0B9lijxkjAFr+thB0IrOu7ruwNY+mvdP6dAewUur+pJaIjEe+4s8JBEFb4BxJfBBPuEbGSxbi4OPEJuwT53TMJMEs7+gIxCCmwioTggTBp6JzDsT/cdBeyWCusCQwDWpqoYCoUWJLrUQ6dOlI7s6p+iIUNIamtyBCwb4izs27HdEpX8gvO9rEdtcb7399HyO3oD4gHgcuFiuZTpvWHdn9WYwPGM6npJNG7crtLnctTR0cP9KutSPNzpySeAniHx8L9ebdD9tNPCWC+OtOcGRrcBeEznkYh1C4kzdP1ORm5upnknABEBAAHCwF8EGAEIABMFAmKItdQJELU9yA0T7e8FAhsMAABJmAgAhRPk/dFj71bU/UTXrkEkZZzE9JzUgan/ttyRrV6QbFZABByf4pYjBj+yLKw3280//JWurKox2uzEq1hdXPedRHICRuh1Fjd00otaQ+wGF3kY74zlWivB6Wp6tnL9STQ1oVYBUv7HhSHoJ5shELyedxxHxurUgFAD+pbFXIiK8cnAHfXTJMcrmPpC+YWEC/DeqIyEcNPkzRhtRSuERXcq1n+KJvMUAKMD/tezwvujzBaaSWapmdnGmtRjjL7IxUeGamVWOwLQbUr+34MwzdeJdcL8fav5LA8Uk0ulyeXdwiAK8FKQsixI+xZvz7HUs8ln4pZwGw/TpvO9cMkHogtgzQ==\" | base64 -d | sudo tee -a /etc/apt/keyrings/kubernetes-archive-keyring.gpg",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) AddK8SRepo() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "echo \"deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee /etc/apt/sources.list.d/kubernetes.list",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) InstallKubeadm() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo apt-get update\nsudo apt-get install -y kubelet kubeadm kubectl\nsudo apt-mark hold kubelet kubeadm kubectl",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) SetModprobe() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo modprobe br_netfilter",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) SudoSu() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo su",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) SetIpForward() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "echo '1' | sudo tee -a /proc/sys/net/ipv4/ip_forward",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) Exit() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "exit",
		Parser:    nil,
		Condition: cl.Required,
	}
}

// Control-plane

func (u *Ubuntu2004CommandLib) InitKubeadm(parser cl.Parser) cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo kubeadm init --pod-network-cidr=10.244.0.0/16",
		Parser:    parser,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) UntaintControlPlane() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "kubectl taint nodes --all node-role.kubernetes.io/control-plane-",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) AddKubeConfig() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "rm -r  $HOME/.kube \n mkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config",
		Parser:    nil,
		Condition: cl.Anyway,
	}
}

func (u *Ubuntu2004CommandLib) AddFlannel() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) InstallHelm() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo snap install helm --classic",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) AddBitnamiRepo() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "helm repo add bitnami https://charts.bitnami.com/bitnami",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) InstallPrometheus() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "helm install prometheus bitnami/kube-prometheus",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) CreateFolderForPV() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "sudo mkdir -p /devkube/postgres",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) AddStorageClass() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "kubectl apply -f - <<EOF \nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: local-storage\n  annotations:\n    storageclass.kubernetes.io/is-default-class: \"true\"\nprovisioner: kubernetes.io/no-provisioner\nvolumeBindingMode: Immediate\nEOF",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) AddMetallbConf(ip string) cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   cl.Command(fmt.Sprintf("kubectl apply -f - <<EOF \n---\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: default\n  namespace: default\nspec:\n  addresses:\n  - %s/32\n  autoAssign: true\n---\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: default\n  namespace: default\nspec:\n  ipAddressPools:\n  - default\nEOF", ip)),
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) AddPostgresPV(hostname string, number int) cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   cl.Command(fmt.Sprintf("kubectl apply -f - <<EOF \napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-%i\n  labels:\n    type: local\nspec:\n  capacity:\n    storage: 1Gi\n  volumeMode: Filesystem\n  accessModes:\n  - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: local-storage\n  local:\n    path: /devkube/postgresql\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: kubernetes.io/hostname\n          operator: In\n          values:\n          - %s\nEOF", number, hostname)),
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) AddGrafanaPV(hostname string) cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   cl.Command(fmt.Sprintf("kubectl apply -f - <<EOF\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-grafana\n  labels:\n    type: local\nspec:\n  capacity:\n    storage: 10Gi\n  volumeMode: Filesystem\n  accessModes:\n  - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: local-storage\n  local:\n    path: /devkube/postgresql\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: kubernetes.io/hostname\n          operator: In\n          values:\n          - %s\nEOF", hostname)),
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) AddGrafanaIngress(userNum int) cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   cl.Command(fmt.Sprintf("kubectl apply -f - <<EOF\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: grafana-ingress\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: \"grafana.user%d.huginn.pro\"\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: grafana\n            port:\n              number: 3000\nEOF", userNum)),
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) AddGrafanaDashboardConfigMap() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "kubectl apply -f - <<EOF\napiVersion: v1\ndata:\n  def_dashboard.json: |2\n\n    {\n      \"annotations\": {\n        \"list\": [\n          {\n            \"builtIn\": 1,\n            \"datasource\": {\n              \"type\": \"grafana\",\n              \"uid\": \"-- Grafana --\"\n            },\n            \"enable\": true,\n            \"hide\": true,\n            \"iconColor\": \"rgba(0, 211, 255, 1)\",\n            \"name\": \"Annotations & Alerts\",\n            \"target\": {\n              \"limit\": 100,\n              \"matchAny\": false,\n              \"tags\": [],\n              \"type\": \"dashboard\"\n            },\n            \"type\": \"dashboard\"\n          }\n        ]\n      },\n      \"description\": \"Monitors Kubernetes cluster using Prometheus. Shows overall cluster CPU / Memory / Filesystem usage as well as individual pod, containers, systemd services statistics. Uses cAdvisor metrics only.\",\n      \"editable\": true,\n      \"fiscalYearStartMonth\": 0,\n      \"gnetId\": 315,\n      \"graphTooltip\": 0,\n      \"id\": 4,\n      \"links\": [],\n      \"liveNow\": false,\n      \"panels\": [\n        {\n          \"collapsed\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 0\n          },\n          \"id\": 33,\n          \"panels\": [],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"Network I/O pressure\",\n          \"type\": \"row\"\n        },\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 1,\n          \"fillGradient\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 6,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 1\n          },\n          \"height\": \"200px\",\n          \"hiddenSeries\": false,\n          \"id\": 32,\n          \"isNew\": true,\n          \"legend\": {\n            \"alignAsTable\": false,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": false,\n            \"show\": false,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"options\": {\n            \"alertThreshold\": true\n          },\n          \"percentage\": false,\n          \"pluginVersion\": \"9.4.7\",\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m]))\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"Received\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m]))\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"Sent\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeRegions\": [],\n          \"title\": \"Network I/O pressure\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 0,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"Bps\",\n              \"logBase\": 1,\n              \"show\": true\n            },\n            {\n              \"format\": \"Bps\",\n              \"logBase\": 1,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false\n          }\n        },\n        {\n          \"collapsed\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 7\n          },\n          \"id\": 34,\n          \"panels\": [],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"Total usage\",\n          \"type\": \"row\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"color\": {\n                \"mode\": \"thresholds\"\n              },\n              \"mappings\": [\n                {\n                  \"options\": {\n                    \"match\": \"null\",\n                    \"result\": {\n                      \"text\": \"N/A\"\n                    }\n                  },\n                  \"type\": \"special\"\n                }\n              ],\n              \"max\": 100,\n              \"min\": 0,\n              \"thresholds\": {\n                \"mode\": \"absolute\",\n                \"steps\": [\n                  {\n                    \"color\": \"rgba(50, 172, 45, 0.97)\",\n                    \"value\": null\n                  },\n                  {\n                    \"color\": \"rgba(237, 129, 40, 0.89)\",\n                    \"value\": 65\n                  },\n                  {\n                    \"color\": \"rgba(245, 54, 54, 0.9)\",\n                    \"value\": 90\n                  }\n                ]\n              },\n              \"unit\": \"percent\"\n            },\n            \"overrides\": []\n          },\n          \"gridPos\": {\n            \"h\": 5,\n            \"w\": 8,\n            \"x\": 0,\n            \"y\": 8\n          },\n          \"id\": 4,\n          \"links\": [],\n          \"maxDataPoints\": 100,\n          \"options\": {\n            \"orientation\": \"horizontal\",\n            \"reduceOptions\": {\n              \"calcs\": [\n                \"lastNotNull\"\n              ],\n              \"fields\": \"\",\n              \"values\": false\n            },\n            \"showThresholdLabels\": false,\n            \"showThresholdMarkers\": true\n          },\n          \"pluginVersion\": \"9.4.7\",\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (container_memory_working_set_bytes{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) / sum (machine_memory_bytes{kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"title\": \"Cluster memory usage\",\n          \"type\": \"gauge\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"color\": {\n                \"mode\": \"thresholds\"\n              },\n              \"decimals\": 2,\n              \"mappings\": [\n                {\n                  \"options\": {\n                    \"match\": \"null\",\n                    \"result\": {\n                      \"text\": \"N/A\"\n                    }\n                  },\n                  \"type\": \"special\"\n                }\n              ],\n              \"max\": 100,\n              \"min\": 0,\n              \"thresholds\": {\n                \"mode\": \"absolute\",\n                \"steps\": [\n                  {\n                    \"color\": \"rgba(50, 172, 45, 0.97)\",\n                    \"value\": null\n                  },\n                  {\n                    \"color\": \"rgba(237, 129, 40, 0.89)\",\n                    \"value\": 65\n                  },\n                  {\n                    \"color\": \"rgba(245, 54, 54, 0.9)\",\n                    \"value\": 90\n                  }\n                ]\n              },\n              \"unit\": \"percent\"\n            },\n            \"overrides\": []\n          },\n          \"gridPos\": {\n            \"h\": 5,\n            \"w\": 8,\n            \"x\": 8,\n            \"y\": 8\n          },\n          \"id\": 6,\n          \"links\": [],\n          \"maxDataPoints\": 100,\n          \"options\": {\n            \"orientation\": \"horizontal\",\n            \"reduceOptions\": {\n              \"calcs\": [\n                \"lastNotNull\"\n              ],\n              \"fields\": \"\",\n              \"values\": false\n            },\n            \"showThresholdLabels\": false,\n            \"showThresholdMarkers\": true\n          },\n          \"pluginVersion\": \"9.4.7\",\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) / sum (machine_cpu_cores{kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"title\": \"Cluster CPU usage (1m avg)\",\n          \"type\": \"gauge\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"color\": {\n                \"mode\": \"thresholds\"\n              },\n              \"decimals\": 2,\n              \"mappings\": [\n                {\n                  \"options\": {\n                    \"match\": \"null\",\n                    \"result\": {\n                      \"text\": \"N/A\"\n                    }\n                  },\n                  \"type\": \"special\"\n                }\n              ],\n              \"max\": 100,\n              \"min\": 0,\n              \"thresholds\": {\n                \"mode\": \"absolute\",\n                \"steps\": [\n                  {\n                    \"color\": \"rgba(50, 172, 45, 0.97)\",\n                    \"value\": null\n                  },\n                  {\n                    \"color\": \"rgba(237, 129, 40, 0.89)\",\n                    \"value\": 65\n                  },\n                  {\n                    \"color\": \"rgba(245, 54, 54, 0.9)\",\n                    \"value\": 90\n                  }\n                ]\n              },\n              \"unit\": \"percent\"\n            },\n            \"overrides\": []\n          },\n          \"gridPos\": {\n            \"h\": 5,\n            \"w\": 8,\n            \"x\": 16,\n            \"y\": 8\n          },\n          \"id\": 7,\n          \"links\": [],\n          \"maxDataPoints\": 100,\n          \"options\": {\n            \"orientation\": \"horizontal\",\n            \"reduceOptions\": {\n              \"calcs\": [\n                \"lastNotNull\"\n              ],\n              \"fields\": \"\",\n              \"values\": false\n            },\n            \"showThresholdLabels\": false,\n            \"showThresholdMarkers\": true\n          },\n          \"pluginVersion\": \"9.4.7\",\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (container_fs_usage_bytes{device=~\\\"^/dev/[sv]d[a-z][1-9]$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) / sum (container_fs_limit_bytes{device=~\\\"^/dev/[sv]d[a-z][1-9]$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) * 100\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"\",\n              \"metric\": \"\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"title\": \"Cluster filesystem usage\",\n          \"type\": \"gauge\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"color\": {\n                \"mode\": \"thresholds\"\n              },\n              \"decimals\": 2,\n              \"mappings\": [\n                {\n                  \"options\": {\n                    \"match\": \"null\",\n                    \"result\": {\n                      \"text\": \"N/A\"\n                    }\n                  },\n                  \"type\": \"special\"\n                }\n              ],\n              \"thresholds\": {\n                \"mode\": \"absolute\",\n                \"steps\": [\n                  {\n                    \"color\": \"green\",\n                    \"value\": null\n                  },\n                  {\n                    \"color\": \"red\",\n                    \"value\": 80\n                  }\n                ]\n              },\n              \"unit\": \"bytes\"\n            },\n            \"overrides\": []\n          },\n          \"gridPos\": {\n            \"h\": 3,\n            \"w\": 4,\n            \"x\": 0,\n            \"y\": 13\n          },\n          \"id\": 9,\n          \"links\": [],\n          \"maxDataPoints\": 100,\n          \"options\": {\n            \"colorMode\": \"none\",\n            \"graphMode\": \"none\",\n            \"justifyMode\": \"auto\",\n            \"orientation\": \"horizontal\",\n            \"reduceOptions\": {\n              \"calcs\": [\n                \"lastNotNull\"\n              ],\n              \"fields\": \"\",\n              \"values\": false\n            },\n            \"textMode\": \"auto\"\n          },\n          \"pluginVersion\": \"9.4.7\",\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (container_memory_working_set_bytes{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"title\": \"Used\",\n          \"type\": \"stat\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"color\": {\n                \"mode\": \"thresholds\"\n              },\n              \"decimals\": 2,\n              \"mappings\": [\n                {\n                  \"options\": {\n                    \"match\": \"null\",\n                    \"result\": {\n                      \"text\": \"N/A\"\n                    }\n                  },\n                  \"type\": \"special\"\n                }\n              ],\n              \"thresholds\": {\n                \"mode\": \"absolute\",\n                \"steps\": [\n                  {\n                    \"color\": \"green\",\n                    \"value\": null\n                  },\n                  {\n                    \"color\": \"red\",\n                    \"value\": 80\n                  }\n                ]\n              },\n              \"unit\": \"bytes\"\n            },\n            \"overrides\": []\n          },\n          \"gridPos\": {\n            \"h\": 3,\n            \"w\": 4,\n            \"x\": 4,\n            \"y\": 13\n          },\n          \"id\": 10,\n          \"links\": [],\n          \"maxDataPoints\": 100,\n          \"options\": {\n            \"colorMode\": \"none\",\n            \"graphMode\": \"none\",\n            \"justifyMode\": \"auto\",\n            \"orientation\": \"horizontal\",\n            \"reduceOptions\": {\n              \"calcs\": [\n                \"lastNotNull\"\n              ],\n              \"fields\": \"\",\n              \"values\": false\n            },\n            \"textMode\": \"auto\"\n          },\n          \"pluginVersion\": \"9.4.7\",\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (machine_memory_bytes{kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"title\": \"Total\",\n          \"type\": \"stat\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"color\": {\n                \"mode\": \"thresholds\"\n              },\n              \"decimals\": 2,\n              \"mappings\": [\n                {\n                  \"options\": {\n                    \"match\": \"null\",\n                    \"result\": {\n                      \"text\": \"N/A\"\n                    }\n                  },\n                  \"type\": \"special\"\n                }\n              ],\n              \"thresholds\": {\n                \"mode\": \"absolute\",\n                \"steps\": [\n                  {\n                    \"color\": \"green\",\n                    \"value\": null\n                  },\n                  {\n                    \"color\": \"red\",\n                    \"value\": 80\n                  }\n                ]\n              },\n              \"unit\": \"none\"\n            },\n            \"overrides\": []\n          },\n          \"gridPos\": {\n            \"h\": 3,\n            \"w\": 4,\n            \"x\": 8,\n            \"y\": 13\n          },\n          \"id\": 11,\n          \"links\": [],\n          \"maxDataPoints\": 100,\n          \"options\": {\n            \"colorMode\": \"none\",\n            \"graphMode\": \"none\",\n            \"justifyMode\": \"auto\",\n            \"orientation\": \"horizontal\",\n            \"reduceOptions\": {\n              \"calcs\": [\n                \"lastNotNull\"\n              ],\n              \"fields\": \"\",\n              \"values\": false\n            },\n            \"textMode\": \"auto\"\n          },\n          \"pluginVersion\": \"9.4.7\",\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m]))\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"title\": \"Used\",\n          \"type\": \"stat\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"color\": {\n                \"mode\": \"thresholds\"\n              },\n              \"decimals\": 2,\n              \"mappings\": [\n                {\n                  \"options\": {\n                    \"match\": \"null\",\n                    \"result\": {\n                      \"text\": \"N/A\"\n                    }\n                  },\n                  \"type\": \"special\"\n                }\n              ],\n              \"thresholds\": {\n                \"mode\": \"absolute\",\n                \"steps\": [\n                  {\n                    \"color\": \"green\",\n                    \"value\": null\n                  },\n                  {\n                    \"color\": \"red\",\n                    \"value\": 80\n                  }\n                ]\n              },\n              \"unit\": \"none\"\n            },\n            \"overrides\": []\n          },\n          \"gridPos\": {\n            \"h\": 3,\n            \"w\": 4,\n            \"x\": 12,\n            \"y\": 13\n          },\n          \"id\": 12,\n          \"links\": [],\n          \"maxDataPoints\": 100,\n          \"options\": {\n            \"colorMode\": \"none\",\n            \"graphMode\": \"none\",\n            \"justifyMode\": \"auto\",\n            \"orientation\": \"horizontal\",\n            \"reduceOptions\": {\n              \"calcs\": [\n                \"lastNotNull\"\n              ],\n              \"fields\": \"\",\n              \"values\": false\n            },\n            \"textMode\": \"auto\"\n          },\n          \"pluginVersion\": \"9.4.7\",\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (machine_cpu_cores{kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"title\": \"Total\",\n          \"type\": \"stat\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"color\": {\n                \"mode\": \"thresholds\"\n              },\n              \"decimals\": 2,\n              \"mappings\": [\n                {\n                  \"options\": {\n                    \"match\": \"null\",\n                    \"result\": {\n                      \"text\": \"N/A\"\n                    }\n                  },\n                  \"type\": \"special\"\n                }\n              ],\n              \"thresholds\": {\n                \"mode\": \"absolute\",\n                \"steps\": [\n                  {\n                    \"color\": \"green\",\n                    \"value\": null\n                  },\n                  {\n                    \"color\": \"red\",\n                    \"value\": 80\n                  }\n                ]\n              },\n              \"unit\": \"bytes\"\n            },\n            \"overrides\": []\n          },\n          \"gridPos\": {\n            \"h\": 3,\n            \"w\": 4,\n            \"x\": 16,\n            \"y\": 13\n          },\n          \"id\": 13,\n          \"links\": [],\n          \"maxDataPoints\": 100,\n          \"options\": {\n            \"colorMode\": \"none\",\n            \"graphMode\": \"none\",\n            \"justifyMode\": \"auto\",\n            \"orientation\": \"horizontal\",\n            \"reduceOptions\": {\n              \"calcs\": [\n                \"lastNotNull\"\n              ],\n              \"fields\": \"\",\n              \"values\": false\n            },\n            \"textMode\": \"auto\"\n          },\n          \"pluginVersion\": \"9.4.7\",\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (container_fs_usage_bytes{device=~\\\"^/dev/[sv]d[a-z][1-9]$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"title\": \"Used\",\n          \"type\": \"stat\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"fieldConfig\": {\n            \"defaults\": {\n              \"color\": {\n                \"mode\": \"thresholds\"\n              },\n              \"decimals\": 2,\n              \"mappings\": [\n                {\n                  \"options\": {\n                    \"match\": \"null\",\n                    \"result\": {\n                      \"text\": \"N/A\"\n                    }\n                  },\n                  \"type\": \"special\"\n                }\n              ],\n              \"thresholds\": {\n                \"mode\": \"absolute\",\n                \"steps\": [\n                  {\n                    \"color\": \"green\",\n                    \"value\": null\n                  },\n                  {\n                    \"color\": \"red\",\n                    \"value\": 80\n                  }\n                ]\n              },\n              \"unit\": \"bytes\"\n            },\n            \"overrides\": []\n          },\n          \"gridPos\": {\n            \"h\": 3,\n            \"w\": 4,\n            \"x\": 20,\n            \"y\": 13\n          },\n          \"id\": 14,\n          \"links\": [],\n          \"maxDataPoints\": 100,\n          \"options\": {\n            \"colorMode\": \"none\",\n            \"graphMode\": \"none\",\n            \"justifyMode\": \"auto\",\n            \"orientation\": \"horizontal\",\n            \"reduceOptions\": {\n              \"calcs\": [\n                \"lastNotNull\"\n              ],\n              \"fields\": \"\",\n              \"values\": false\n            },\n            \"textMode\": \"auto\"\n          },\n          \"pluginVersion\": \"9.4.7\",\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (container_fs_limit_bytes{device=~\\\"^/dev/[sv]d[a-z][1-9]$\\\",id=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"})\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"title\": \"Total\",\n          \"type\": \"stat\"\n        },\n        {\n          \"collapsed\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 16\n          },\n          \"id\": 35,\n          \"panels\": [],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"Pods CPU usage\",\n          \"type\": \"row\"\n        },\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"decimals\": 3,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 0,\n          \"fillGradient\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 7,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 17\n          },\n          \"height\": \"\",\n          \"hiddenSeries\": false,\n          \"id\": 17,\n          \"isNew\": true,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": true,\n            \"show\": true,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"options\": {\n            \"alertThreshold\": true\n          },\n          \"percentage\": false,\n          \"pluginVersion\": \"9.4.7\",\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": true,\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (rate (container_cpu_usage_seconds_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (pod_name)\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ pod_name }}\",\n              \"metric\": \"container_cpu\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeRegions\": [],\n          \"title\": \"Pods CPU usage (1m avg)\",\n          \"tooltip\": {\n            \"msResolution\": true,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"none\",\n              \"label\": \"cores\",\n              \"logBase\": 1,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"logBase\": 1,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false\n          }\n        },\n        {\n          \"collapsed\": true,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 24\n          },\n          \"id\": 36,\n          \"panels\": [\n            {\n              \"aliasColors\": {},\n              \"bars\": false,\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"decimals\": 3,\n              \"editable\": true,\n              \"error\": false,\n              \"fill\": 0,\n              \"grid\": {},\n              \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 24\n              },\n              \"height\": \"\",\n              \"id\": 23,\n              \"isNew\": true,\n              \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": true,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n              },\n              \"lines\": true,\n              \"linewidth\": 2,\n              \"links\": [],\n              \"nullPointMode\": \"connected\",\n              \"percentage\": false,\n              \"pointradius\": 5,\n              \"points\": false,\n              \"renderer\": \"flot\",\n              \"seriesOverrides\": [],\n              \"stack\": false,\n              \"steppedLine\": true,\n              \"targets\": [\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (rate (container_cpu_usage_seconds_total{systemd_service_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (systemd_service_name)\",\n                  \"hide\": false,\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"{{ systemd_service_name }}\",\n                  \"metric\": \"container_cpu\",\n                  \"refId\": \"A\",\n                  \"step\": 10\n                }\n              ],\n              \"thresholds\": [],\n              \"title\": \"System services CPU usage (1m avg)\",\n              \"tooltip\": {\n                \"msResolution\": true,\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"cumulative\"\n              },\n              \"type\": \"graph\",\n              \"xaxis\": {\n                \"show\": true\n              },\n              \"yaxes\": [\n                {\n                  \"format\": \"none\",\n                  \"label\": \"cores\",\n                  \"logBase\": 1,\n                  \"show\": true\n                },\n                {\n                  \"format\": \"short\",\n                  \"logBase\": 1,\n                  \"show\": false\n                }\n              ]\n            }\n          ],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"System services CPU usage\",\n          \"type\": \"row\"\n        },\n        {\n          \"collapsed\": true,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 25\n          },\n          \"id\": 37,\n          \"panels\": [\n            {\n              \"aliasColors\": {},\n              \"bars\": false,\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"decimals\": 3,\n              \"editable\": true,\n              \"error\": false,\n              \"fill\": 0,\n              \"grid\": {},\n              \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 25\n              },\n              \"height\": \"\",\n              \"id\": 24,\n              \"isNew\": true,\n              \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": true,\n                \"current\": true,\n                \"hideEmpty\": false,\n                \"hideZero\": false,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n              },\n              \"lines\": true,\n              \"linewidth\": 2,\n              \"links\": [],\n              \"nullPointMode\": \"connected\",\n              \"percentage\": false,\n              \"pointradius\": 5,\n              \"points\": false,\n              \"renderer\": \"flot\",\n              \"seriesOverrides\": [],\n              \"stack\": false,\n              \"steppedLine\": true,\n              \"targets\": [\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (rate (container_cpu_usage_seconds_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",container_name!=\\\"POD\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (container_name, pod_name)\",\n                  \"hide\": false,\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"pod: {{ pod_name }} | {{ container_name }}\",\n                  \"metric\": \"container_cpu\",\n                  \"refId\": \"A\",\n                  \"step\": 10\n                },\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (rate (container_cpu_usage_seconds_total{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (kubernetes_io_hostname, name, image)\",\n                  \"hide\": false,\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n                  \"metric\": \"container_cpu\",\n                  \"refId\": \"B\",\n                  \"step\": 10\n                },\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (rate (container_cpu_usage_seconds_total{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (kubernetes_io_hostname, rkt_container_name)\",\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n                  \"metric\": \"container_cpu\",\n                  \"refId\": \"C\",\n                  \"step\": 10\n                }\n              ],\n              \"thresholds\": [],\n              \"title\": \"Containers CPU usage (1m avg)\",\n              \"tooltip\": {\n                \"msResolution\": true,\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"cumulative\"\n              },\n              \"type\": \"graph\",\n              \"xaxis\": {\n                \"show\": true\n              },\n              \"yaxes\": [\n                {\n                  \"format\": \"none\",\n                  \"label\": \"cores\",\n                  \"logBase\": 1,\n                  \"show\": true\n                },\n                {\n                  \"format\": \"short\",\n                  \"logBase\": 1,\n                  \"show\": false\n                }\n              ]\n            }\n          ],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"Containers CPU usage\",\n          \"type\": \"row\"\n        },\n        {\n          \"collapsed\": true,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 26\n          },\n          \"id\": 38,\n          \"panels\": [\n            {\n              \"aliasColors\": {},\n              \"bars\": false,\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"decimals\": 3,\n              \"editable\": true,\n              \"error\": false,\n              \"fill\": 0,\n              \"grid\": {},\n              \"gridPos\": {\n                \"h\": 14,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 26\n              },\n              \"id\": 20,\n              \"isNew\": true,\n              \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": true,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n              },\n              \"lines\": true,\n              \"linewidth\": 2,\n              \"links\": [],\n              \"nullPointMode\": \"connected\",\n              \"percentage\": false,\n              \"pointradius\": 5,\n              \"points\": false,\n              \"renderer\": \"flot\",\n              \"seriesOverrides\": [],\n              \"stack\": false,\n              \"steppedLine\": true,\n              \"targets\": [\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (rate (container_cpu_usage_seconds_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (id)\",\n                  \"hide\": false,\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"{{ id }}\",\n                  \"metric\": \"container_cpu\",\n                  \"refId\": \"A\",\n                  \"step\": 10\n                }\n              ],\n              \"thresholds\": [],\n              \"title\": \"All processes CPU usage (1m avg)\",\n              \"tooltip\": {\n                \"msResolution\": true,\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"cumulative\"\n              },\n              \"type\": \"graph\",\n              \"xaxis\": {\n                \"show\": true\n              },\n              \"yaxes\": [\n                {\n                  \"format\": \"none\",\n                  \"label\": \"cores\",\n                  \"logBase\": 1,\n                  \"show\": true\n                },\n                {\n                  \"format\": \"short\",\n                  \"logBase\": 1,\n                  \"show\": false\n                }\n              ]\n            }\n          ],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"All processes CPU usage\",\n          \"type\": \"row\"\n        },\n        {\n          \"collapsed\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 27\n          },\n          \"id\": 39,\n          \"panels\": [],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"Pods memory usage\",\n          \"type\": \"row\"\n        },\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 0,\n          \"fillGradient\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 7,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 28\n          },\n          \"hiddenSeries\": false,\n          \"id\": 25,\n          \"isNew\": true,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": true,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"options\": {\n            \"alertThreshold\": true\n          },\n          \"percentage\": false,\n          \"pluginVersion\": \"9.4.7\",\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": true,\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (container_memory_working_set_bytes{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (pod_name)\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"{{ pod_name }}\",\n              \"metric\": \"container_memory_usage:sort_desc\",\n              \"refId\": \"A\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeRegions\": [],\n          \"title\": \"Pods memory usage\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"bytes\",\n              \"logBase\": 1,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"logBase\": 1,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false\n          }\n        },\n        {\n          \"collapsed\": true,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 35\n          },\n          \"id\": 40,\n          \"panels\": [\n            {\n              \"aliasColors\": {},\n              \"bars\": false,\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"decimals\": 2,\n              \"editable\": true,\n              \"error\": false,\n              \"fill\": 0,\n              \"grid\": {},\n              \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 35\n              },\n              \"id\": 26,\n              \"isNew\": true,\n              \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": true,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": 200,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n              },\n              \"lines\": true,\n              \"linewidth\": 2,\n              \"links\": [],\n              \"nullPointMode\": \"connected\",\n              \"percentage\": false,\n              \"pointradius\": 5,\n              \"points\": false,\n              \"renderer\": \"flot\",\n              \"seriesOverrides\": [],\n              \"stack\": false,\n              \"steppedLine\": true,\n              \"targets\": [\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (container_memory_working_set_bytes{systemd_service_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (systemd_service_name)\",\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"{{ systemd_service_name }}\",\n                  \"metric\": \"container_memory_usage:sort_desc\",\n                  \"refId\": \"A\",\n                  \"step\": 10\n                }\n              ],\n              \"thresholds\": [],\n              \"title\": \"System services memory usage\",\n              \"tooltip\": {\n                \"msResolution\": false,\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"cumulative\"\n              },\n              \"type\": \"graph\",\n              \"xaxis\": {\n                \"show\": true\n              },\n              \"yaxes\": [\n                {\n                  \"format\": \"bytes\",\n                  \"logBase\": 1,\n                  \"show\": true\n                },\n                {\n                  \"format\": \"short\",\n                  \"logBase\": 1,\n                  \"show\": false\n                }\n              ]\n            }\n          ],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"System services memory usage\",\n          \"type\": \"row\"\n        },\n        {\n          \"collapsed\": true,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 36\n          },\n          \"id\": 41,\n          \"panels\": [\n            {\n              \"aliasColors\": {},\n              \"bars\": false,\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"decimals\": 2,\n              \"editable\": true,\n              \"error\": false,\n              \"fill\": 0,\n              \"grid\": {},\n              \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 36\n              },\n              \"id\": 27,\n              \"isNew\": true,\n              \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": true,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": 200,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n              },\n              \"lines\": true,\n              \"linewidth\": 2,\n              \"links\": [],\n              \"nullPointMode\": \"connected\",\n              \"percentage\": false,\n              \"pointradius\": 5,\n              \"points\": false,\n              \"renderer\": \"flot\",\n              \"seriesOverrides\": [],\n              \"stack\": false,\n              \"steppedLine\": true,\n              \"targets\": [\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (container_memory_working_set_bytes{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",container_name!=\\\"POD\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (container_name, pod_name)\",\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"pod: {{ pod_name }} | {{ container_name }}\",\n                  \"metric\": \"container_memory_usage:sort_desc\",\n                  \"refId\": \"A\",\n                  \"step\": 10\n                },\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (container_memory_working_set_bytes{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (kubernetes_io_hostname, name, image)\",\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n                  \"metric\": \"container_memory_usage:sort_desc\",\n                  \"refId\": \"B\",\n                  \"step\": 10\n                },\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (container_memory_working_set_bytes{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (kubernetes_io_hostname, rkt_container_name)\",\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n                  \"metric\": \"container_memory_usage:sort_desc\",\n                  \"refId\": \"C\",\n                  \"step\": 10\n                }\n              ],\n              \"thresholds\": [],\n              \"title\": \"Containers memory usage\",\n              \"tooltip\": {\n                \"msResolution\": false,\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"cumulative\"\n              },\n              \"type\": \"graph\",\n              \"xaxis\": {\n                \"show\": true\n              },\n              \"yaxes\": [\n                {\n                  \"format\": \"bytes\",\n                  \"logBase\": 1,\n                  \"show\": true\n                },\n                {\n                  \"format\": \"short\",\n                  \"logBase\": 1,\n                  \"show\": false\n                }\n              ]\n            }\n          ],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"Containers memory usage\",\n          \"type\": \"row\"\n        },\n        {\n          \"collapsed\": true,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 37\n          },\n          \"id\": 42,\n          \"panels\": [\n            {\n              \"aliasColors\": {},\n              \"bars\": false,\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"decimals\": 2,\n              \"editable\": true,\n              \"error\": false,\n              \"fill\": 0,\n              \"grid\": {},\n              \"gridPos\": {\n                \"h\": 14,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 37\n              },\n              \"id\": 28,\n              \"isNew\": true,\n              \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": true,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": 200,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n              },\n              \"lines\": true,\n              \"linewidth\": 2,\n              \"links\": [],\n              \"nullPointMode\": \"connected\",\n              \"percentage\": false,\n              \"pointradius\": 5,\n              \"points\": false,\n              \"renderer\": \"flot\",\n              \"seriesOverrides\": [],\n              \"stack\": false,\n              \"steppedLine\": true,\n              \"targets\": [\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (container_memory_working_set_bytes{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}) by (id)\",\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"{{ id }}\",\n                  \"metric\": \"container_memory_usage:sort_desc\",\n                  \"refId\": \"A\",\n                  \"step\": 10\n                }\n              ],\n              \"thresholds\": [],\n              \"title\": \"All processes memory usage\",\n              \"tooltip\": {\n                \"msResolution\": false,\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"cumulative\"\n              },\n              \"type\": \"graph\",\n              \"xaxis\": {\n                \"show\": true\n              },\n              \"yaxes\": [\n                {\n                  \"format\": \"bytes\",\n                  \"logBase\": 1,\n                  \"show\": true\n                },\n                {\n                  \"format\": \"short\",\n                  \"logBase\": 1,\n                  \"show\": false\n                }\n              ]\n            }\n          ],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"All processes memory usage\",\n          \"type\": \"row\"\n        },\n        {\n          \"collapsed\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 38\n          },\n          \"id\": 43,\n          \"panels\": [],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"Pods network I/O\",\n          \"type\": \"row\"\n        },\n        {\n          \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"decimals\": 2,\n          \"editable\": true,\n          \"error\": false,\n          \"fill\": 1,\n          \"fillGradient\": 0,\n          \"grid\": {},\n          \"gridPos\": {\n            \"h\": 7,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 39\n          },\n          \"hiddenSeries\": false,\n          \"id\": 16,\n          \"isNew\": true,\n          \"legend\": {\n            \"alignAsTable\": true,\n            \"avg\": true,\n            \"current\": true,\n            \"max\": false,\n            \"min\": false,\n            \"rightSide\": true,\n            \"show\": true,\n            \"sideWidth\": 200,\n            \"sort\": \"current\",\n            \"sortDesc\": true,\n            \"total\": false,\n            \"values\": true\n          },\n          \"lines\": true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n          \"options\": {\n            \"alertThreshold\": true\n          },\n          \"percentage\": false,\n          \"pluginVersion\": \"9.4.7\",\n          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"sum (rate (container_network_receive_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (pod_name)\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"-> {{ pod_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"A\",\n              \"step\": 10\n            },\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"expr\": \"- sum (rate (container_network_transmit_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (pod_name)\",\n              \"interval\": \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\": \"<- {{ pod_name }}\",\n              \"metric\": \"network\",\n              \"refId\": \"B\",\n              \"step\": 10\n            }\n          ],\n          \"thresholds\": [],\n          \"timeRegions\": [],\n          \"title\": \"Pods network I/O (1m avg)\",\n          \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\": true,\n            \"sort\": 2,\n            \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n            \"values\": []\n          },\n          \"yaxes\": [\n            {\n              \"format\": \"Bps\",\n              \"logBase\": 1,\n              \"show\": true\n            },\n            {\n              \"format\": \"short\",\n              \"logBase\": 1,\n              \"show\": false\n            }\n          ],\n          \"yaxis\": {\n            \"align\": false\n          }\n        },\n        {\n          \"collapsed\": true,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 46\n          },\n          \"id\": 44,\n          \"panels\": [\n            {\n              \"aliasColors\": {},\n              \"bars\": false,\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"decimals\": 2,\n              \"editable\": true,\n              \"error\": false,\n              \"fill\": 1,\n              \"grid\": {},\n              \"gridPos\": {\n                \"h\": 7,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 46\n              },\n              \"id\": 30,\n              \"isNew\": true,\n              \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": true,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": true,\n                \"show\": true,\n                \"sideWidth\": 200,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n              },\n              \"lines\": true,\n              \"linewidth\": 2,\n              \"links\": [],\n              \"nullPointMode\": \"connected\",\n              \"percentage\": false,\n              \"pointradius\": 5,\n              \"points\": false,\n              \"renderer\": \"flot\",\n              \"seriesOverrides\": [],\n              \"stack\": false,\n              \"steppedLine\": false,\n              \"targets\": [\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (rate (container_network_receive_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (container_name, pod_name)\",\n                  \"hide\": false,\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"-> pod: {{ pod_name }} | {{ container_name }}\",\n                  \"metric\": \"network\",\n                  \"refId\": \"B\",\n                  \"step\": 10\n                },\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"- sum (rate (container_network_transmit_bytes_total{image!=\\\"\\\",name=~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (container_name, pod_name)\",\n                  \"hide\": false,\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"<- pod: {{ pod_name }} | {{ container_name }}\",\n                  \"metric\": \"network\",\n                  \"refId\": \"D\",\n                  \"step\": 10\n                },\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (rate (container_network_receive_bytes_total{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (kubernetes_io_hostname, name, image)\",\n                  \"hide\": false,\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"-> docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n                  \"metric\": \"network\",\n                  \"refId\": \"A\",\n                  \"step\": 10\n                },\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"- sum (rate (container_network_transmit_bytes_total{image!=\\\"\\\",name!~\\\"^k8s_.*\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (kubernetes_io_hostname, name, image)\",\n                  \"hide\": false,\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"<- docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})\",\n                  \"metric\": \"network\",\n                  \"refId\": \"C\",\n                  \"step\": 10\n                },\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (kubernetes_io_hostname, rkt_container_name)\",\n                  \"hide\": false,\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"-> rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n                  \"metric\": \"network\",\n                  \"refId\": \"E\",\n                  \"step\": 10\n                },\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"- sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\\\"\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (kubernetes_io_hostname, rkt_container_name)\",\n                  \"hide\": false,\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"<- rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}\",\n                  \"metric\": \"network\",\n                  \"refId\": \"F\",\n                  \"step\": 10\n                }\n              ],\n              \"thresholds\": [],\n              \"title\": \"Containers network I/O (1m avg)\",\n              \"tooltip\": {\n                \"msResolution\": false,\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"cumulative\"\n              },\n              \"type\": \"graph\",\n              \"xaxis\": {\n                \"show\": true\n              },\n              \"yaxes\": [\n                {\n                  \"format\": \"Bps\",\n                  \"logBase\": 1,\n                  \"show\": true\n                },\n                {\n                  \"format\": \"short\",\n                  \"logBase\": 1,\n                  \"show\": false\n                }\n              ]\n            }\n          ],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"Containers network I/O\",\n          \"type\": \"row\"\n        },\n        {\n          \"collapsed\": true,\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"prometheusuid\"\n          },\n          \"gridPos\": {\n            \"h\": 1,\n            \"w\": 24,\n            \"x\": 0,\n            \"y\": 47\n          },\n          \"id\": 45,\n          \"panels\": [\n            {\n              \"aliasColors\": {},\n              \"bars\": false,\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"decimals\": 2,\n              \"editable\": true,\n              \"error\": false,\n              \"fill\": 1,\n              \"grid\": {},\n              \"gridPos\": {\n                \"h\": 14,\n                \"w\": 24,\n                \"x\": 0,\n                \"y\": 47\n              },\n              \"id\": 29,\n              \"isNew\": true,\n              \"legend\": {\n                \"alignAsTable\": true,\n                \"avg\": true,\n                \"current\": true,\n                \"max\": false,\n                \"min\": false,\n                \"rightSide\": false,\n                \"show\": true,\n                \"sideWidth\": 200,\n                \"sort\": \"current\",\n                \"sortDesc\": true,\n                \"total\": false,\n                \"values\": true\n              },\n              \"lines\": true,\n              \"linewidth\": 2,\n              \"links\": [],\n              \"nullPointMode\": \"connected\",\n              \"percentage\": false,\n              \"pointradius\": 5,\n              \"points\": false,\n              \"renderer\": \"flot\",\n              \"seriesOverrides\": [],\n              \"stack\": false,\n              \"steppedLine\": false,\n              \"targets\": [\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"sum (rate (container_network_receive_bytes_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (id)\",\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"-> {{ id }}\",\n                  \"metric\": \"network\",\n                  \"refId\": \"A\",\n                  \"step\": 10\n                },\n                {\n                  \"datasource\": {\n                    \"type\": \"prometheus\",\n                    \"uid\": \"prometheusuid\"\n                  },\n                  \"expr\": \"- sum (rate (container_network_transmit_bytes_total{id!=\\\"/\\\",kubernetes_io_hostname=~\\\"^$Node$\\\"}[1m])) by (id)\",\n                  \"interval\": \"10s\",\n                  \"intervalFactor\": 1,\n                  \"legendFormat\": \"<- {{ id }}\",\n                  \"metric\": \"network\",\n                  \"refId\": \"B\",\n                  \"step\": 10\n                }\n              ],\n              \"thresholds\": [],\n              \"title\": \"All processes network I/O (1m avg)\",\n              \"tooltip\": {\n                \"msResolution\": false,\n                \"shared\": true,\n                \"sort\": 2,\n                \"value_type\": \"cumulative\"\n              },\n              \"type\": \"graph\",\n              \"xaxis\": {\n                \"show\": true\n              },\n              \"yaxes\": [\n                {\n                  \"format\": \"Bps\",\n                  \"logBase\": 1,\n                  \"show\": true\n                },\n                {\n                  \"format\": \"short\",\n                  \"logBase\": 1,\n                  \"show\": false\n                }\n              ]\n            }\n          ],\n          \"targets\": [\n            {\n              \"datasource\": {\n                \"type\": \"prometheus\",\n                \"uid\": \"prometheusuid\"\n              },\n              \"refId\": \"A\"\n            }\n          ],\n          \"title\": \"All processes network I/O\",\n          \"type\": \"row\"\n        }\n      ],\n      \"refresh\": \"10s\",\n      \"revision\": 1,\n      \"schemaVersion\": 38,\n      \"style\": \"dark\",\n      \"tags\": [\n        \"kubernetes\"\n      ],\n      \"templating\": {\n        \"list\": [\n          {\n            \"allValue\": \".*\",\n            \"current\": {\n              \"selected\": false,\n              \"text\": \"All\",\n              \"value\": \"$__all\"\n            },\n            \"datasource\": {\n              \"type\": \"prometheus\",\n              \"uid\": \"prometheusuid\"\n            },\n            \"definition\": \"\",\n            \"hide\": 0,\n            \"includeAll\": true,\n            \"multi\": false,\n            \"name\": \"Node\",\n            \"options\": [],\n            \"query\": {\n              \"query\": \"label_values(kubernetes_io_hostname)\",\n              \"refId\": \"Prometheus-Node-Variable-Query\"\n            },\n            \"refresh\": 1,\n            \"regex\": \"\",\n            \"skipUrlSync\": false,\n            \"sort\": 0,\n            \"type\": \"query\"\n          }\n        ]\n      },\n      \"time\": {\n        \"from\": \"now-5m\",\n        \"to\": \"now\"\n      },\n      \"timepicker\": {\n        \"refresh_intervals\": [\n          \"5s\",\n          \"10s\",\n          \"30s\",\n          \"1m\",\n          \"5m\",\n          \"15m\",\n          \"30m\",\n          \"1h\",\n          \"2h\",\n          \"1d\"\n        ],\n        \"time_options\": [\n          \"5m\",\n          \"15m\",\n          \"1h\",\n          \"6h\",\n          \"12h\",\n          \"24h\",\n          \"2d\",\n          \"7d\",\n          \"30d\"\n        ]\n      },\n      \"timezone\": \"browser\",\n      \"title\": \"Kubernetes cluster monitoring (via Prometheus)\",\n      \"uid\": \"nMnqQpEVk\",\n      \"version\": 2,\n      \"weekStart\": \"\"\n    }\nkind: ConfigMap\nmetadata:\n  name: grafana-dashboard\n  namespace: default\nEOF",
		Parser:    nil,
		Condition: cl.Required,
	}
}

func (u *Ubuntu2004CommandLib) AddGrafanaDatasourceSecret() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   "kubectl apply -f - <<EOF\napiVersion: v1\ndata:\n  datasource-secret.yaml: YXBpVmVyc2lvbjogMQoKZGF0YXNvdXJjZXM6CiAgLSBuYW1lOiBQcm9tZXRoZXVzCiAgICB1aWQ6IHByb21ldGhldXN1aWQKICAgIHR5cGU6IHByb21ldGhldXMKICAgICMgQWNjZXNzIG1vZGUgLSBwcm94eSAoc2VydmVyIGluIHRoZSBVSSkgb3IgZGlyZWN0IChicm93c2VyIGluIHRoZSBVSSkuCiAgICBhY2Nlc3M6IHByb3h5CiAgICB1cmw6IGh0dHA6Ly9wcm9tZXRoZXVzLWt1YmUtcHJvbWV0aGV1cy1wcm9tZXRoZXVzOjkwOTAK\nkind: Secret\nmetadata:\n  name: datasource-secret\n  namespace: default\ntype: Opaque\nEOF",
		Parser:    nil,
		Condition: cl.Required,
	}
}

// Join cluster

func (u *Ubuntu2004CommandLib) KubeadmJoin(ip netip.AddrPort, token, tokenHash string) cl.CommandAndParser {

	cp := cl.CommandAndParser{
		Command:   "sudo kubeadm join",
		Parser:    nil,
		Condition: 0,
	}
	cp = cp.WithArgs(ip.String(), "--token", token, "--discovery-token-ca-cert-hash", tokenHash)
	return cp
}

// Reset Kubeadm

func (u *Ubuntu2004CommandLib) KubeadmReset() cl.CommandAndParser {
	cp := cl.CommandAndParser{
		Command:   "sudo kubeadm reset -f",
		Parser:    nil,
		Condition: cl.Anyway,
	}
	return cp
}

func (u *Ubuntu2004CommandLib) StopKubelet() cl.CommandAndParser {
	cp := cl.CommandAndParser{
		Command:   "sudo systemctl stop kubelet",
		Parser:    nil,
		Condition: cl.Anyway,
	}
	return cp
}

func (u *Ubuntu2004CommandLib) StopCRIO() cl.CommandAndParser {
	cp := cl.CommandAndParser{
		Command:   "sudo systemctl stop crio.service",
		Parser:    nil,
		Condition: cl.Anyway,
	}
	return cp
}

func (u *Ubuntu2004CommandLib) LinkDownCNI0() cl.CommandAndParser {
	cp := cl.CommandAndParser{
		Command:   "sudo ip link set cni0 down",
		Parser:    nil,
		Condition: cl.Anyway,
	}
	return cp
}

func (u *Ubuntu2004CommandLib) IpconfigCNI0Down() cl.CommandAndParser {
	cp := cl.CommandAndParser{
		Command:   "sudo ifconfig cni0 down",
		Parser:    nil,
		Condition: cl.Anyway,
	}
	return cp
}

func (u *Ubuntu2004CommandLib) IpconfigFlannelDown() cl.CommandAndParser {
	cp := cl.CommandAndParser{
		Command:   "sudo ifconfig flannel.1 down",
		Parser:    nil,
		Condition: cl.Anyway,
	}
	return cp
}

func (u *Ubuntu2004CommandLib) BrctlDelbr() cl.CommandAndParser {
	cp := cl.CommandAndParser{
		Command:   "sudo brctl delbr cni0",
		Parser:    nil,
		Condition: cl.Anyway,
	}
	return cp
}

func (u *Ubuntu2004CommandLib) CatAdminConfFile() cl.CommandAndParser {
	return cl.CommandAndParser{
		Command:   cl.Command("sudo cat /etc/kubernetes/admin.conf"),
		Parser:    nil,
		Condition: cl.Required,
	}
}
